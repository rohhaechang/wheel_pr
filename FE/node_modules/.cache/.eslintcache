[{"/Users/rohhaechang/wheel_pr/FE/src/index.tsx":"1","/Users/rohhaechang/wheel_pr/FE/src/reportWebVitals.ts":"2","/Users/rohhaechang/wheel_pr/FE/src/App.tsx":"3","/Users/rohhaechang/wheel_pr/FE/src/Contexts/Side/index.tsx":"4","/Users/rohhaechang/wheel_pr/FE/src/Contexts/publicData/index.tsx":"5","/Users/rohhaechang/wheel_pr/FE/src/Components/Map/index.tsx":"6","/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Button/index.tsx":"7","/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Input/index.tsx":"8","/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Side/index.tsx":"9","/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Side/DataList/index.tsx":"10","/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Side/IconButton/index.tsx":"11"},{"size":554,"mtime":1668498839920,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1668498839921,"results":"14","hashOfConfig":"13"},{"size":525,"mtime":1668498839919,"results":"15","hashOfConfig":"13"},{"size":682,"mtime":1668498839920,"results":"16","hashOfConfig":"13"},{"size":2206,"mtime":1668498839920,"results":"17","hashOfConfig":"13"},{"size":13123,"mtime":1668498839920,"results":"18","hashOfConfig":"13"},{"size":1065,"mtime":1668498839920,"results":"19","hashOfConfig":"13"},{"size":795,"mtime":1668498839920,"results":"20","hashOfConfig":"13"},{"size":3598,"mtime":1668498839920,"results":"21","hashOfConfig":"13"},{"size":1605,"mtime":1668498839920,"results":"22","hashOfConfig":"13"},{"size":807,"mtime":1668498839920,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9j5zha",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rohhaechang/wheel_pr/FE/src/index.tsx",[],[],"/Users/rohhaechang/wheel_pr/FE/src/reportWebVitals.ts",[],[],"/Users/rohhaechang/wheel_pr/FE/src/App.tsx",[],[],"/Users/rohhaechang/wheel_pr/FE/src/Contexts/Side/index.tsx",[],[],"/Users/rohhaechang/wheel_pr/FE/src/Contexts/publicData/index.tsx",[],[],"/Users/rohhaechang/wheel_pr/FE/src/Components/Map/index.tsx",["60","61","62","63","64","65","66","67","68","69","70"],[],"import React, {useEffect, useRef, useState, useContext, KeyboardEventHandler} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport {MdRefresh} from 'react-icons/md';\n\nimport { Button } from './Button';\nimport { Input } from './Input';\nimport Side from './Side';\nimport { SideContext } from '../../Contexts/Side';\nimport { PublicDataContext } from '../../Contexts/publicData';\n\nconst Map = () => {\n\n  /** 내가 있는 현재 위치 */\n  const [myLocation, setMyLocation] = useState<{latitude: number; longitude: number} | string>(``);\n  /** 검색 주소 */\n  const [search, setSearch] = useState(``);\n  /** 검색 좌표 */\n  const [searchCoord, setSearchCoord] = useState<{x: number; y: number} | string>(``);\n  /** side에서 시작하는 전역 상태 */\n  const {select} = useContext(SideContext);\n  /** 공공데이터를 담은 전역 상태 */\n  const {data1, data2, data3, markerD1, markerD2, markerD3, changeData1, changeData2, changeData3, changeMarkerD1, changeMarkerD2, changeMarkerD3} = useContext(PublicDataContext);\n  /** 지도를 담은 ref 객체 */\n  const mapElement = useRef<HTMLElement | null | any>(null);\n  /** 지도의 처음, 검색 시 마커를 담은 ref 객체 */\n  const markerRef = useRef<any | null>(null);\n  /** 데이터의 마커를 담은 ref 객체 */\n  const dataMarkerRef = useRef<any | null>(null);\n  /** 선택된 마커를 담은 ref 객체 */\n  const selectedMarker = useRef<any | null>(null);\n\n  /** 사이드에 뜨는 마커를 담은 배열 */\n  let array1: any[] = [];\n  let array2: any[] = [];\n  let array3: any[] = [];\n\n  /** 주소 검색 */\n  const searchAddress = async () => {\n    naver.maps.Service.geocode({\n      query: search\n    }, async function(status, response) {\n      if(status === naver.maps.Service.Status.ERROR) {\n        console.log('오류');\n      }\n      // 지도 위치 검색 좌표로 이동\n      mapElement.current.panTo(new naver.maps.LatLng(Number(response.v2.addresses[0].y), Number(response.v2.addresses[0].x)));\n      setSearchCoord({x: Number(response.v2.addresses[0].y), y: Number(response.v2.addresses[0].x)});\n      // 검색 위치 마커 생성\n      // 이전의 마커를 안 보이게\n      markerRef.current.setMap(null);\n      markerRef.current = new naver.maps.Marker({\n        position: new naver.maps.LatLng(Number(response.v2.addresses[0].y), Number(response.v2.addresses[0].x)),\n        map: mapElement.current,\n      })\n      naver.maps.Event.addListener(markerRef.current, 'click', () => {\n        const mapLatLng = new naver.maps.LatLng(Number(response.v2.addresses[0].y), Number(response.v2.addresses[0].x));\n        mapElement.current.panTo(mapLatLng, {duration: 400});\n      })\n      let infowindow = new naver.maps.InfoWindow({\n        content: search,\n        disableAnchor: true,\n      })\n      infowindow.open(mapElement.current, markerRef.current);\n    })\n  }\n\n  /** 현재 위치추적에 성공했을 때 위치값을 넣는다 */\n  const success = (position: any) => {\n    setMyLocation({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n    })\n  }\n\n  /** 현재 위치추적에 실패했을 때 초기값을 넣는다 */\n  const fail = () => {\n    setMyLocation({\n      latitude: 37.4979517,\n      longitude: 127.0276188,\n    })\n  }\n\n  /** select(전역 변수) 변화 시 마커 생성 */\n  const selectMarker = (a: number | undefined) => {\n    if(a !== undefined) {\n      let mapBounds = mapElement.current.getBounds();\n      if(a === 1) {\n        if(!data1[0].marker){\n          data1.map((element: any) => {\n            if(element.y !== null && element.x !== null) {\n              dataMarkerRef.current = new naver.maps.Marker({\n                position: new naver.maps.LatLng(Number(element.y), Number(element.x)),\n                map: mapElement.current,\n              })\n              naver.maps.Event.addListener(dataMarkerRef.current, 'click', () => {\n                const mapLatLng = new naver.maps.LatLng(Number(element.y), Number(element.x));\n                mapElement.current.panTo(mapLatLng, {duration: 400});\n              })\n              element.marker = dataMarkerRef.current;\n              let position = dataMarkerRef.current.getPosition();\n              if(!mapBounds.hasLatLng(position)) {\n                dataMarkerRef.current.setMap(null);\n              } else {\n                array1.push(element);\n              }\n            }\n            else {\n              console.log('데이터 없음')\n            }\n          })\n          removeMarker(1);\n          changeMarkerD1(array1);\n        }\n        else {\n          data1.forEach((e) => {\n            if(e.y !== null) {\n              let position = e.marker.getPosition();\n              if(mapBounds.hasLatLng(position)) {\n                e.marker.setMap(mapElement.current);\n                array1.push(e);\n              }\n            }\n          })\n          removeMarker(1);\n          changeMarkerD1(array1);\n        }\n      }\n      if(a === 2) {\n        if(!data2[0].marker) {\n          data2.map((element: any) => {\n            if(element.y !== null && element.x !== null) {\n              dataMarkerRef.current = new naver.maps.Marker({\n                position: new naver.maps.LatLng(Number(element.y), Number(element.x)),\n                map: mapElement.current,\n              })\n              naver.maps.Event.addListener(dataMarkerRef.current, 'click', () => {\n                const mapLatLng = new naver.maps.LatLng(Number(element.y), Number(element.x));\n                mapElement.current.panTo(mapLatLng, {duration: 400});\n              })\n              element.marker = dataMarkerRef.current;\n              let position = dataMarkerRef.current.getPosition();\n              if(!mapBounds.hasLatLng(position)) {\n                dataMarkerRef.current.setMap(null);\n              } else {\n                array2.push(element);\n              }\n            }\n            else {\n              console.log('데이터 없음')\n            }\n          })\n          removeMarker(2);\n          changeMarkerD2(array2);\n        }\n        else {\n          data2.forEach((e) => {\n            if(e.y !== null) {\n              let position = e.marker.getPosition();\n              if(mapBounds.hasLatLng(position)) {\n                e.marker.setMap(mapElement.current);\n                array2.push(e)\n              }\n            }\n          })\n          removeMarker(2);\n          changeMarkerD2(array2);\n        }\n      }\n      if(a === 3) {\n        if(!data3[0].marker) {\n          data3.map((element: any) => {\n            if(element.y !== null && element.x !== null){\n              dataMarkerRef.current = new naver.maps.Marker({\n                position: new naver.maps.LatLng(Number(element.y), Number(element.x)),\n                map: mapElement.current,\n              })\n              naver.maps.Event.addListener(dataMarkerRef.current, 'click', () => {\n                const mapLatLng = new naver.maps.LatLng(Number(element.y), Number(element.x));\n                mapElement.current.panTo(mapLatLng, {duration: 400});\n              })\n              element.marker = dataMarkerRef.current;\n              let position = dataMarkerRef.current.getPosition();\n              if(!mapBounds.hasLatLng(position)) {\n                dataMarkerRef.current.setMap(null);\n              } else {\n                array3.push(element);\n              }\n            }\n            else {\n              console.log('데이터 없음')\n            }\n          })\n          removeMarker(3);\n          changeMarkerD3(array3);\n        }\n        else {\n          data3.forEach((e) => {\n            if(e.y !== null) {\n              let position = e.marker.getPosition();\n              if(mapBounds.hasLatLng(position)) {\n                e.marker.setMap(mapElement.current);\n                array3.push(e);\n              }\n            }\n          })\n          removeMarker(3);\n          changeMarkerD3(array3);\n        }\n      }    \n    }\n    else console.log('오류');\n  }\n\n  /** select에 따른 마커 제거 */\n  const removeMarker = (a: number) => {\n    if(a === 1) {\n      if(data2[0].marker) {\n        data2.forEach((e) => {\n          if(e.y !== null) {\n            e.marker.setMap(null);\n          }\n        })\n      }\n      if(data3[0].marker) {\n        data3.forEach((e) => {\n          if(e.y !== null) {\n            e.marker.setMap(null);\n          }\n        })\n      }\n      changeMarkerD2([]);\n      changeMarkerD3([]);\n    }\n    if(a === 2) {\n      if(data1[0].marker) {\n        data1.forEach((e) => {\n          if(e.y !== null) {\n            e.marker.setMap(null);\n          }\n        })\n      }\n      if(data3[0].marker) {\n        data3.forEach((e) => {\n          if(e.y !== null) {\n            e.marker.setMap(null);\n          }\n        })\n      }\n      changeMarkerD1([]);\n      changeMarkerD3([]);\n    }\n    if(a === 3) {\n      if(data1[0].marker) {\n        data1.forEach((e) => {\n          if(e.y !== null) {\n            e.marker.setMap(null);\n          }\n        })\n      }\n      if(data2[0].marker) {\n        data2.forEach((e) => {\n          if(e.y !== null) {\n            e.marker.setMap(null);\n          }\n        })\n      }\n      changeMarkerD1([]);\n      changeMarkerD2([]);\n    }\n  }\n\n  /** 현재 지도에서 다시 검색하기\n   * 왜 잘 작동하는지 모르겠다...\n   */\n  const remarking = (a: number | undefined) => {\n    selectMarker(a);\n  }\n\n  /** 서버에서 공공데이터 받아오기 */\n  const getData = async (a?: string) => {\n    try {\n      const res = await axios.get(`/api${a}`);\n      if(a === '1') {\n        changeData1(res.data);\n      }\n      if(a === '2') {\n        changeData2(res.data);\n      }\n      if(a === '3') {\n        changeData3(res.data);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  // ex) res.data[].x\n\n  /** 현재 위치를 추적 */\n  useEffect(() => {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, fail);\n    }\n  }, []);\n  \n  /* 지도 생성 */\n  useEffect(() => {\n    const {naver} = window;\n    if(typeof myLocation !== 'string') \n      mapElement.current = new naver.maps.Map('map', {\n        center: new naver.maps.LatLng(myLocation.latitude, myLocation.longitude),\n        zoomControl: true,\n        zoom: 14,\n        zoomControlOptions: {\n          position: naver.maps.Position.TOP_RIGHT,\n        }\n      });\n      console.log('지도 호출');\n  }, [mapElement, myLocation]);\n\n  /* 최초 위치 마커 생성 */\n  useEffect(() => {\n    if(typeof myLocation !== 'string'){\n      markerRef.current = new naver.maps.Marker({\n        position: new naver.maps.LatLng(myLocation.latitude, myLocation.longitude),\n        map: mapElement.current,\n      })\n      /* 마커 클릭 시 지도 이동 */\n      naver.maps.Event.addListener(markerRef.current, 'click', () => {\n        const mapLatLng = new naver.maps.LatLng(myLocation.latitude, myLocation.longitude);\n        mapElement.current.panTo(mapLatLng, {duration: 400});\n      })\n    }\n  }, [myLocation]);\n\n  /** select에 따른 마커 생성 */\n  useEffect(() => {\n    selectMarker(select);\n  }, [select]);\n\n  /** 서버에서 공공데이터 받아오는 useEffect */\n  useEffect(() => {\n    getData('1');\n    getData('2');\n    getData('3');\n  }, []);\n\n  /** 엔터 누를 시 검색과 같은 효과 */\n  const KeyDownHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if(event.code === \"Enter\") {\n      searchAddress();\n    }\n  }\n\n  /** 지도 로딩 시(현재 위치 찾는 중)에 화면 렌더링 */\n  if(typeof myLocation === 'string') \n  return (\n    <MapContents>\n      <MapContainer>\n        <div style={{textAlign: 'center', fontSize: '30px', lineHeight: '600px'}}>Loading...</div>\n      </MapContainer>\n    </MapContents>\n  )\n\n  return (\n    <>\n    <MapContents>\n      <SearchContainer>\n        <Input onKeyDown={KeyDownHandler} placeholder='검색' onChange={(text) => setSearch(text)}/>\n        <Button backgroundColor='beige' onClick={() => {\n          searchAddress()\n          }} />\n        <ReButton onClick={() => remarking(select)}><MdRefresh size='18' style={{marginRight: '5px', marginLeft: '-4px', marginBottom: '-4px' }}/>현 지도에서 검색</ReButton>\n      </SearchContainer>\n      <MapContainer>\n        <div id=\"map\" style={{minHeight: '600px',}}></div>\n      </MapContainer>\n    </MapContents>\n    <SideContents>\n      <Side />\n    </SideContents>\n    </>\n  )\n};\n\nconst MapContents = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  flex: 2;\n  height: 600px;\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  top: 1rem;\n  width: 305px;\n  height: 40px;\n  z-index: 2;\n  margin: 0 auto;\n`;\n\nconst MapContainer = styled.div`\n  position: relative;\n  z-index: 1;\n  top: -40px;\n`;\n\nconst SideContents = styled.div`\n  flex: 1;\n`;\n\nconst ReButton = styled.button`\n  width: 150px;\n  height: 40px;\n  z-index: 3;\n  margin-top: 1rem;\n  border-radius: 15px;\n  margin-left: 20%;\n  border: none;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n  background-color: white;\n  color: #0066ff;\n  cursor: pointer;\n`;\n\nexport default Map;","/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Button/index.tsx",[],[],"/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Input/index.tsx",["71"],[],"import React, { KeyboardEventHandler } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  readonly placeholder?: string,\n  readonly onChange?: (text: string) => void;\n  readonly onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\nconst InputBox = styled.input`\n  font-size: 16px;\n  width: 260px;\n  padding: 15px 10px;\n  opacity: 0.8;\n  box-sizing: border-box;\n  border-radius: 8px;\n  border: 0.5px solid black;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n\nexport const Input = ({placeholder, onChange, onKeyDown}: Props) => {\n  return (\n    <InputBox \n      placeholder={placeholder}\n      onChange={(e) => {\n        if(typeof onChange === 'function') {\n          onChange(e.target.value);\n        }\n      }}\n      onKeyDown={onKeyDown}\n      />\n  )\n}","/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Side/index.tsx",["72"],[],"import React, {useContext} from 'react';\nimport styled from 'styled-components';\n\nimport { IconButton } from './IconButton';\nimport DataList from './DataList';\nimport { SideContext } from '../../../Contexts/Side';\nimport { PublicDataContext } from '../../../Contexts/publicData';\n\nconst Side = () => {\n  const {select, changeSelect} = useContext(SideContext);\n  const {markerD1, markerD2, markerD3} = useContext(PublicDataContext);\n  if(select == 1)\n  return (\n    <Container>\n      <IconContainer>\n        <IconButton backgroundColor='beige' \n          label='장애인 관광편의시설'\n          onClick={() => {\n            changeSelect(1)\n          }}/>\n        <IconButton backgroundColor='beige' \n          label='장애인 관광숙박'\n          onClick={() => {\n            changeSelect(2)\n          }} />\n        <IconButton backgroundColor='beige' \n          label='장애인 관광음식점'\n          onClick={() => {\n            changeSelect(3)\n          }}/>\n      </IconContainer>\n      <ListContainer>\n        <DataList label={markerD1}></DataList>\n      </ListContainer>\n    </Container>\n  )\n  if(select === 2) \n  return (\n    <Container>\n      <IconContainer>\n        <IconButton backgroundColor='beige' \n          label='장애인 관광편의시설'\n          onClick={() => {\n            changeSelect(1)\n          }}/>\n        <IconButton backgroundColor='beige' \n          label='장애인 관광숙박'\n          onClick={() => {\n            changeSelect(2)\n          }} />\n        <IconButton backgroundColor='beige' \n          label='장애인 관광음식점'\n          onClick={() => {\n            changeSelect(3)\n          }}/>\n      </IconContainer>\n      <ListContainer>\n        <DataList label={markerD2}></DataList>\n      </ListContainer>\n    </Container>\n  )\n  if(select === 3)\n  return (\n    <Container>\n      <IconContainer>\n        <IconButton backgroundColor='beige' \n          label='장애인 관광편의시설'\n          onClick={() => {\n            changeSelect(1)\n          }}/>\n        <IconButton backgroundColor='beige' \n          label='장애인 관광숙박'\n          onClick={() => {\n            changeSelect(2)\n          }} />\n        <IconButton backgroundColor='beige' \n          label='장애인 관광음식점'\n          onClick={() => {\n            changeSelect(3)\n          }}/>\n      </IconContainer>\n      <ListContainer>\n        <DataList label={markerD3}></DataList>\n      </ListContainer>\n    </Container>\n  )\n  \n  return (\n    <Container>\n      <IconContainer>\n        <IconButton backgroundColor='beige' \n          label='장애인 관광편의시설'\n          onClick={() => {\n            changeSelect(1)\n          }}/>\n        <IconButton backgroundColor='beige' \n          label='장애인 관광숙박'\n          onClick={() => {\n            changeSelect(2)\n          }} />\n        <IconButton backgroundColor='beige' \n          label='장애인 관광음식점'\n          onClick={() => {\n            changeSelect(3)\n          }}/>\n      </IconContainer>\n      <ListContainer>\n        <DataList></DataList>\n      </ListContainer>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  flex: 1;\n  box-sizing: border-box;\n  border: 1px solid black;\n  height: 600px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst IconContainer = styled.div`\n  flex: 1;\n  box-sizing: border-box;\n  border: 1px solid black;\n  display: flex;\n`;\n\nconst ListContainer = styled.div`\n  flex: 5;\n  box-sizing: border-box;\n  border: 1px solid black;\n  overflow-y: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport default Side;","/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Side/DataList/index.tsx",[],[],"/Users/rohhaechang/wheel_pr/FE/src/Components/Map/Side/IconButton/index.tsx",[],[],{"ruleId":"73","severity":1,"message":"74","line":1,"column":57,"nodeType":"75","messageId":"76","endLine":1,"endColumn":77},{"ruleId":"73","severity":1,"message":"77","line":19,"column":10,"nodeType":"75","messageId":"76","endLine":19,"endColumn":21},{"ruleId":"73","severity":1,"message":"78","line":23,"column":31,"nodeType":"75","messageId":"76","endLine":23,"endColumn":39},{"ruleId":"73","severity":1,"message":"79","line":23,"column":41,"nodeType":"75","messageId":"76","endLine":23,"endColumn":49},{"ruleId":"73","severity":1,"message":"80","line":23,"column":51,"nodeType":"75","messageId":"76","endLine":23,"endColumn":59},{"ruleId":"73","severity":1,"message":"81","line":31,"column":9,"nodeType":"75","messageId":"76","endLine":31,"endColumn":23},{"ruleId":"82","severity":1,"message":"83","line":90,"column":36,"nodeType":"84","messageId":"85","endLine":90,"endColumn":38},{"ruleId":"82","severity":1,"message":"83","line":131,"column":36,"nodeType":"84","messageId":"85","endLine":131,"endColumn":38},{"ruleId":"82","severity":1,"message":"83","line":172,"column":36,"nodeType":"84","messageId":"85","endLine":172,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":339,"column":6,"nodeType":"88","endLine":339,"endColumn":14,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":346,"column":6,"nodeType":"88","endLine":346,"endColumn":8,"suggestions":"91"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":37},{"ruleId":"92","severity":1,"message":"93","line":12,"column":13,"nodeType":"94","messageId":"95","endLine":12,"endColumn":15},"@typescript-eslint/no-unused-vars","'KeyboardEventHandler' is defined but never used.","Identifier","unusedVar","'searchCoord' is assigned a value but never used.","'markerD1' is assigned a value but never used.","'markerD2' is assigned a value but never used.","'markerD3' is assigned a value but never used.","'selectedMarker' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'selectMarker'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["97"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [select, selectMarker]",{"range":"102","text":"103"},"Update the dependencies array to be: [getData]",{"range":"104","text":"105"},[10576,10584],"[select, selectMarker]",[10702,10704],"[getData]"]