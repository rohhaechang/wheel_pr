{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/rohhaechang/wheel_pr/FE/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _slicedToArray from\"/Users/rohhaechang/wheel_pr/FE/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/rohhaechang/wheel_pr/FE/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/rohhaechang/wheel_pr/FE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useEffect,useReducer,useRef,useState,useContext,useCallback}from'react';import styled from'styled-components';import axios from'axios';import{Button}from'./Button';import{Input}from'./Input';import Side from'./Side';import{SideContext}from'../../Contexts/Side';/** 공공데이터 reducer 타입 */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";/** 공공데이터를 가져올 때 사용할 reducer */var reducer=function reducer(state,action){switch(action.type){case'LOADING':return{loading:true,data:null,error:null};case'SUCCESS':return{loading:false,data:action.data,error:null};case'ERROR':return{loading:false,data:null,error:action.error};default:throw new Error(\"unhandled error\");}};var Map=function Map(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/');case 3:res=_context.sent;console.log(res);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:_context.prev=10;console.log('실행');return _context.finish(10);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,7,10,13]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();useEffect(function(){fetchData();},[]);/** 내가 있는 현재 위치 */var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),myLocation=_useState2[0],setMyLocation=_useState2[1];/** 검색 주소 */var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),search=_useState4[0],setSearch=_useState4[1];/** 검색 좌표 */var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),searchCoord=_useState6[0],setSearchCoord=_useState6[1];/* 공공데이터 상태 */var _useReducer=useReducer(reducer,{loading:false,data:null,error:null}),_useReducer2=_slicedToArray(_useReducer,2),state1=_useReducer2[0],dispatch1=_useReducer2[1];var _useReducer3=useReducer(reducer,{loading:false,data:null,error:null}),_useReducer4=_slicedToArray(_useReducer3,2),state2=_useReducer4[0],dispatch2=_useReducer4[1];var _useReducer5=useReducer(reducer,{loading:false,data:null,error:null}),_useReducer6=_slicedToArray(_useReducer5,2),state3=_useReducer6[0],dispatch3=_useReducer6[1];var _useContext=useContext(SideContext),select=_useContext.select;var dataArray1=[];var dataArray2=[];var dataArray3=[];/** 지도를 담은 ref 객체 */var mapElement=useRef(null);/** 지도의 마커를 담은 ref 객체 */var markerRef=useRef(null);/** 주소 검색 */var searchAddress=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:naver.maps.Service.geocode({query:search},/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(status,response){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(status===naver.maps.Service.Status.ERROR){console.log('오류');}// 지도 위치 검색 좌표로 이동\nmapElement.current.panTo(new naver.maps.LatLng(Number(response.v2.addresses[0].y),Number(response.v2.addresses[0].x)));setSearchCoord({x:Number(response.v2.addresses[0].y),y:Number(response.v2.addresses[0].x)});case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2){return _ref3.apply(this,arguments);};}());case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function searchAddress(){return _ref2.apply(this,arguments);};}();/** 현재 위치추적에 성공했을 때 위치값을 넣는다 */var success=function success(position){setMyLocation({latitude:position.coords.latitude,longitude:position.coords.longitude});};/** 현재 위치추적에 실패했을 때 초기값을 넣는다 */var fail=function fail(){setMyLocation({latitude:37.4979517,longitude:127.0276188});};/** 선택한 공공데이터에 따른 데이터 배열 생성 */var createArray=useCallback(function(state,a){if(a===1){var _loop=function _loop(i){naver.maps.Service.geocode({query:state.data.viewAmenitiesInfo.row[i].ADDR},function(status,response){if(status===naver.maps.Service.Status.ERROR){console.log('오류');}dataArray1[i]=response.v2.addresses[0];});};for(var i=0;i<10;i++){_loop(i);}console.log(dataArray1);}if(a===2){var _loop2=function _loop2(_i){naver.maps.Service.geocode({query:state.data.stayLodgeInfo.row[_i].ADDR},function(status,response){if(status===naver.maps.Service.Status.ERROR){console.log('오류');}dataArray2[_i]=response.v2.addresses[0];});};for(var _i=0;_i<10;_i++){_loop2(_i);}}if(a===3){var _loop3=function _loop3(_i2){naver.maps.Service.geocode({query:state.data.touristFoodInfo.row[_i2].ADDR},function(status,response){if(status===naver.maps.Service.Status.ERROR){console.log('오류');}dataArray3[_i2]=response.v2.addresses[0];});};for(var _i2=0;_i2<10;_i2++){_loop3(_i2);}}},[]);/** 현재 위치를 추적 */useEffect(function(){if(navigator.geolocation){navigator.geolocation.getCurrentPosition(success,fail);}},[]);/* 지도 생성 */useEffect(function(){var _window=window,naver=_window.naver;if(typeof myLocation!=='string')mapElement.current=new naver.maps.Map('map',{center:new naver.maps.LatLng(myLocation.latitude,myLocation.longitude),zoomControl:true,zoom:14,zoomControlOptions:{position:naver.maps.Position.TOP_RIGHT}});console.log('지도 호출');},[mapElement,myLocation]);/* 마커 생성 */useEffect(function(){if(typeof myLocation!=='string'){markerRef.current=new naver.maps.Marker({position:new naver.maps.LatLng(myLocation.latitude,myLocation.longitude),map:mapElement.current});/* 마커 클릭 시 지도 이동 */naver.maps.Event.addListener(markerRef.current,'click',function(){var mapLatLng=new naver.maps.LatLng(myLocation.latitude,myLocation.longitude);mapElement.current.panTo(mapLatLng,{duration:400});});}},[myLocation]);/* 공공데이터 가져오기 */useEffect(function(){var fetchUsers1=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var response;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch1({type:'LOADING'});_context4.prev=1;_context4.next=4;return axios.get(\"http://openapi.seoul.go.kr:8088/486857594b726863383574794f4669/json/viewAmenitiesInfo/1/900/\");case 4:response=_context4.sent;dispatch1({type:'SUCCESS',data:response.data});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](1);dispatch1({type:'ERROR',error:_context4.t0});case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[1,8]]);}));return function fetchUsers1(){return _ref4.apply(this,arguments);};}();var fetchUsers2=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(){var response;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch2({type:'LOADING'});_context5.prev=1;_context5.next=4;return axios.get(\"http://openapi.seoul.go.kr:8088/486857594b726863383574794f4669/json/stayLodgeInfo/1/280/\");case 4:response=_context5.sent;dispatch2({type:'SUCCESS',data:response.data});_context5.next=11;break;case 8:_context5.prev=8;_context5.t0=_context5[\"catch\"](1);dispatch2({type:'ERROR',error:_context5.t0});case 11:case\"end\":return _context5.stop();}}},_callee5,null,[[1,8]]);}));return function fetchUsers2(){return _ref5.apply(this,arguments);};}();var fetchUsers3=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(){var response;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:dispatch3({type:'LOADING'});_context6.prev=1;_context6.next=4;return axios.get(\"http://openapi.seoul.go.kr:8088/486857594b726863383574794f4669/json/touristFoodInfo/1/150/\");case 4:response=_context6.sent;dispatch3({type:'SUCCESS',data:response.data});_context6.next=11;break;case 8:_context6.prev=8;_context6.t0=_context6[\"catch\"](1);dispatch3({type:'ERROR',error:_context6.t0});case 11:case\"end\":return _context6.stop();}}},_callee6,null,[[1,8]]);}));return function fetchUsers3(){return _ref6.apply(this,arguments);};}();fetchUsers1();fetchUsers2();fetchUsers3();},[]);/** select에 따른 데이터 배열 생성 */useEffect(function(){if(select===1){createArray(state1,1);}if(select===2){createArray(state2,2);}if(select===3){createArray(state3,3);}},[select,state1,state2,state3,createArray]);/** 지도 로딩 시(현재 위치 찾는 중)에 화면 렌더링 */if(typeof myLocation==='string')return/*#__PURE__*/_jsx(MapContents,{children:/*#__PURE__*/_jsx(MapContainer,{children:/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',fontSize:'30px',lineHeight:'600px'},children:\"Loading...\"})})});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(MapContents,{children:[/*#__PURE__*/_jsxs(SearchContainer,{children:[/*#__PURE__*/_jsx(Input,{placeholder:\"\\uAC80\\uC0C9\",onChange:function onChange(text){return setSearch(text);}}),/*#__PURE__*/_jsx(Button,{backgroundColor:\"beige\",onClick:function onClick(){searchAddress();}})]}),/*#__PURE__*/_jsx(MapContainer,{children:/*#__PURE__*/_jsx(\"div\",{id:\"map\",style:{minHeight:'600px'}})})]}),/*#__PURE__*/_jsx(SideContents,{children:/*#__PURE__*/_jsx(Side,{})})]});};var MapContents=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  box-sizing: border-box;\\n  flex: 2;\\n  height: 600px;\\n\"])));var SearchContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: relative;\\n  top: 1rem;\\n  width: 305px;\\n  height: 40px;\\n  z-index: 2;\\n  margin: 0 auto;\\n\"])));var MapContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: relative;\\n  z-index: 1;\\n  top: -40px;\\n\"])));var SideContents=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  flex: 1;\\n\"])));export default Map;","map":{"version":3,"names":["React","useEffect","useReducer","useRef","useState","useContext","useCallback","styled","axios","Button","Input","Side","SideContext","reducer","state","action","type","loading","data","error","Error","Map","fetchData","get","res","console","log","myLocation","setMyLocation","search","setSearch","searchCoord","setSearchCoord","state1","dispatch1","state2","dispatch2","state3","dispatch3","select","dataArray1","dataArray2","dataArray3","mapElement","markerRef","searchAddress","naver","maps","Service","geocode","query","status","response","Status","ERROR","current","panTo","LatLng","Number","v2","addresses","y","x","success","position","latitude","coords","longitude","fail","createArray","a","i","viewAmenitiesInfo","row","ADDR","stayLodgeInfo","touristFoodInfo","navigator","geolocation","getCurrentPosition","window","center","zoomControl","zoom","zoomControlOptions","Position","TOP_RIGHT","Marker","map","Event","addListener","mapLatLng","duration","fetchUsers1","fetchUsers2","fetchUsers3","textAlign","fontSize","lineHeight","text","minHeight","MapContents","div","SearchContainer","MapContainer","SideContents"],"sources":["/Users/rohhaechang/wheel_pr/FE/src/Components/Map/index.tsx"],"sourcesContent":["import React, {useEffect, useReducer, useRef, useState, useContext, useCallback} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport { Button } from './Button';\nimport { Input } from './Input';\nimport Side from './Side';\nimport { SideContext } from '../../Contexts/Side';\n\n/** 공공데이터 reducer 타입 */\ntype Action = \n  | { type: 'LOADING';}\n  | { type: 'SUCCESS'; data: JSON;}\n  | { type: 'ERROR' ; error: string | unknown}\n\n/** 공공데이터 state 타입 */\ntype State = \n  {loading: any; data: any; error: any}\n; \n\n/** 공공데이터를 가져올 때 사용할 reducer */\nconst reducer = (state: any, action: Action) => {\n  switch (action.type) {\n    case 'LOADING':\n      return {\n        loading: true,\n        data: null,\n        error: null,\n      };\n    case 'SUCCESS':\n      return {\n        loading: false,\n        data: action.data,\n        error: null,\n      }\n    case 'ERROR':\n      return {\n        loading: false,\n        data: null,\n        error: action.error,\n      }\n    default: \n      throw new Error(`unhandled error`);\n  }\n}\n\nconst Map = () => {\n\n  const fetchData = async () => {\n    try {\n      const res = await axios.get('/');\n      console.log(res);\n    } catch (e) {\n      console.log(e);\n    }\n    finally {console.log('실행')}\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  /** 내가 있는 현재 위치 */\n  const [myLocation, setMyLocation] = useState<{latitude: number; longitude: number} | string>(``);\n  /** 검색 주소 */\n  const [search, setSearch] = useState(``);\n  /** 검색 좌표 */\n  const [searchCoord, setSearchCoord] = useState<{x: number; y: number} | string>(``);\n\n  /* 공공데이터 상태 */\n  const [state1, dispatch1] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null,\n  })\n\n  const [state2, dispatch2] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null,\n  })\n\n  const [state3, dispatch3] = useReducer(reducer, {\n    loading: false,\n    data: null,\n    error: null,\n  })\n\n  const {select} = useContext(SideContext);\n\n  let dataArray1: any = [];\n  let dataArray2: any = [];\n  let dataArray3: any = [];\n\n  /** 지도를 담은 ref 객체 */\n  const mapElement = useRef<HTMLElement | null | any>(null);\n\n  /** 지도의 마커를 담은 ref 객체 */\n  const markerRef = useRef<any | null>(null);\n\n  /** 주소 검색 */\n  const searchAddress = async () => {\n    naver.maps.Service.geocode({\n      query: search\n    }, async function(status, response) {\n      if(status === naver.maps.Service.Status.ERROR) {\n        console.log('오류');\n      }\n      // 지도 위치 검색 좌표로 이동\n      mapElement.current.panTo(new naver.maps.LatLng(Number(response.v2.addresses[0].y), Number(response.v2.addresses[0].x)));\n      setSearchCoord({x: Number(response.v2.addresses[0].y), y: Number(response.v2.addresses[0].x)});\n    })\n  }\n\n  /** 현재 위치추적에 성공했을 때 위치값을 넣는다 */\n  const success = (position: any) => {\n    setMyLocation({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude,\n    })\n  }\n\n  /** 현재 위치추적에 실패했을 때 초기값을 넣는다 */\n  const fail = () => {\n    setMyLocation({\n      latitude: 37.4979517,\n      longitude: 127.0276188,\n    })\n  }\n\n  /** 선택한 공공데이터에 따른 데이터 배열 생성 */\n  const createArray = useCallback((state: State, a: number) => {\n    if(a === 1) {\n      for(let i=0; i<10; i++) {\n        naver.maps.Service.geocode({\n          query: state.data.viewAmenitiesInfo.row[i].ADDR\n        }, function (status, response) {\n          if(status === naver.maps.Service.Status.ERROR) {\n            console.log('오류');\n          }\n          dataArray1[i] = response.v2.addresses[0];\n        })\n      }\n      console.log(dataArray1);\n    }\n    if(a === 2) {\n      for(let i=0; i<10; i++) {\n        naver.maps.Service.geocode({\n          query: state.data.stayLodgeInfo.row[i].ADDR\n        }, function (status, response) {\n          if(status === naver.maps.Service.Status.ERROR) {\n            console.log('오류');\n          }\n          dataArray2[i] = response.v2.addresses[0];\n        })\n      }\n    }\n    if(a === 3) {\n      for(let i=0; i<10; i++) {\n        naver.maps.Service.geocode({\n          query: state.data.touristFoodInfo.row[i].ADDR\n        }, function (status, response) {\n          if(status === naver.maps.Service.Status.ERROR) {\n            console.log('오류');\n          }\n          dataArray3[i] = response.v2.addresses[0];\n        })\n      }\n    }\n  }, []);\n\n  /** 현재 위치를 추적 */\n  useEffect(() => {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, fail);\n    }\n  }, []);\n  \n  /* 지도 생성 */\n  useEffect(() => {\n    const {naver} = window;\n    if(typeof myLocation !== 'string') \n      mapElement.current = new naver.maps.Map('map', {\n        center: new naver.maps.LatLng(myLocation.latitude, myLocation.longitude),\n        zoomControl: true,\n        zoom: 14,\n        zoomControlOptions: {\n          position: naver.maps.Position.TOP_RIGHT,\n        }\n      });\n      console.log('지도 호출');\n  }, [mapElement, myLocation]);\n\n  /* 마커 생성 */\n  useEffect(() => {\n    if(typeof myLocation !== 'string'){\n      markerRef.current = new naver.maps.Marker({\n        position: new naver.maps.LatLng(myLocation.latitude, myLocation.longitude),\n        map: mapElement.current,\n      })\n      /* 마커 클릭 시 지도 이동 */\n      naver.maps.Event.addListener(markerRef.current, 'click', () => {\n        const mapLatLng = new naver.maps.LatLng(myLocation.latitude, myLocation.longitude);\n        mapElement.current.panTo(mapLatLng, {duration: 400});\n      })\n    }\n  }, [myLocation]);\n\n  /* 공공데이터 가져오기 */\n  useEffect(() => {\n    const fetchUsers1 = async () => {\n      dispatch1({ type: 'LOADING' });\n      try {\n        const response = await axios.get(\n          `http://openapi.seoul.go.kr:8088/486857594b726863383574794f4669/json/viewAmenitiesInfo/1/900/`\n        );\n        dispatch1({ type: 'SUCCESS', data: response.data });\n      } catch (e) {\n        dispatch1({ type: 'ERROR', error: e});\n      }\n    }\n    const fetchUsers2 = async () => {\n      dispatch2({ type: 'LOADING' });\n      try {\n        const response = await axios.get(\n          `http://openapi.seoul.go.kr:8088/486857594b726863383574794f4669/json/stayLodgeInfo/1/280/`\n        );\n        dispatch2({ type: 'SUCCESS', data: response.data });\n      } catch (e) {\n        dispatch2({ type: 'ERROR', error: e});\n      }\n    }\n    const fetchUsers3 = async () => {\n      dispatch3({ type: 'LOADING' });\n      try {\n        const response = await axios.get(\n          `http://openapi.seoul.go.kr:8088/486857594b726863383574794f4669/json/touristFoodInfo/1/150/`\n        );\n        dispatch3({ type: 'SUCCESS', data: response.data });\n      } catch (e) {\n        dispatch3({ type: 'ERROR', error: e});\n      }\n    }\n    fetchUsers1();\n    fetchUsers2();\n    fetchUsers3();\n  }, []);\n\n  /** select에 따른 데이터 배열 생성 */\n  useEffect(() => {\n    if(select === 1) {\n      createArray(state1, 1);\n    }\n    if(select === 2) {\n      createArray(state2, 2);\n    }\n    if(select === 3) {\n      createArray(state3, 3);\n    }\n  }, [select, state1, state2, state3, createArray])\n\n  /** 지도 로딩 시(현재 위치 찾는 중)에 화면 렌더링 */\n  if(typeof myLocation === 'string') \n  return (\n    <MapContents>\n      <MapContainer>\n        <div style={{textAlign: 'center', fontSize: '30px', lineHeight: '600px'}}>Loading...</div>\n      </MapContainer>\n    </MapContents>\n  )\n\n  return (\n    <>\n    <MapContents>\n      <SearchContainer>\n        <Input placeholder='검색' onChange={(text) => setSearch(text)}/>\n        <Button backgroundColor='beige' onClick={() => {\n          searchAddress()\n          }} />\n      </SearchContainer>\n      <MapContainer>\n        <div id=\"map\" style={{minHeight: '600px',}}></div>\n      </MapContainer>\n    </MapContents>\n    <SideContents>\n      <Side />\n    </SideContents>\n    </>\n  )\n};\n\nconst MapContents = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  flex: 2;\n  height: 600px;\n`;\n\nconst SearchContainer = styled.div`\n  position: relative;\n  top: 1rem;\n  width: 305px;\n  height: 40px;\n  z-index: 2;\n  margin: 0 auto;\n`;\n\nconst MapContainer = styled.div`\n  position: relative;\n  z-index: 1;\n  top: -40px;\n`;\n\nconst SideContents = styled.div`\n  flex: 1;\n`;\n\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}